[package]
name = "kas"
version = "0.9.1"
authors = ["Diggory Hardy <git@dhardy.name>"]
edition = "2018"
license = "Apache-2.0"
description = "KAS GUI Toolkit"
readme = "README.md"
documentation = "https://docs.rs/kas/"
keywords = ["gui"]
categories = ["gui"]
repository = "https://github.com/kas-gui/kas"
exclude = ["/examples"]

[package.metadata.docs.rs]
features = ["nightly", "stack_dst", "winit", "markdown"]
rustdoc-args = ["--cfg", "doc_cfg"]
# To build locally:
# RUSTDOCFLAGS="--cfg doc_cfg" cargo +nightly doc --features=nightly,internal_doc,markdown,yaml,json --all --no-deps --open

[features]
default = ["theme", "wgpu", "yaml", "svg", "canvas", "markdown"]

# Enable theme support:
theme = ["kas-theme"]
#Enable WGPU backend:
wgpu = ["kas-wgpu"]

# Enables usage of unstable Rust features
nightly = ["min_spec"]

# Use Generic Associated Types (this is too unstable to include in nightly!)
gat = ["kas-core/gat"]

# Use min_specialization (enables accelerator underlining for AccelLabel)
min_spec = ["kas-widgets/min_spec"]
# Use full specialization
spec = ["min_spec", "kas-core/spec"]

# Enables documentation of APIs for shells and internal usage.
# This API is not intended for use by end-user applications and
# thus is omitted from built documentation by default.
# This flag does not change the API, only built documentation.
internal_doc = ["kas-core/internal_doc"]

# Enable Markdown parsing
markdown = ["kas-core/markdown"]

# Enable config read/write
#TODO(cargo): once weak-dep-features (cargo#8832) is stable, add "winit?/serde"
# and remove the serde feature requirement under dependencies.winit.
config = ["kas-core/config"]

# Enable support for YAML (de)serialisation
yaml = ["config", "kas-core/yaml"]

# Enable support for JSON (de)serialisation
json = ["config", "kas-core/json"]

# Enable support for RON (de)serialisation
ron = ["config", "kas-core/ron"]

# Support canvas widget
canvas = ["kas-widgets/canvas"]

# Support SVG images
svg = ["kas-widgets/svg"]

# Inject logging into macro-generated code.
# Requires that all crates using these macros depend on the log crate.
macros_log = ["kas-core/macros_log"]

stack_dst = ["kas-core/stack_dst"]

winit = ["kas-core/winit"]

[dependencies]
kas-core = { version = "0.9.1", path = "crates/kas-core" }
kas-widgets = { version = "0.9.1", path = "crates/kas-widgets" }
kas-theme = { version = "0.9.0", path = "crates/kas-theme", optional = true }
kas-wgpu = { version = "0.9.0", path = "crates/kas-wgpu", optional = true }

[dev-dependencies]
chrono = "0.4"
env_logger = "0.8"
log = "0.4"

[workspace]
members = [
    "crates/kas-core",
    "crates/kas-macros",
    "crates/kas-theme",
    "crates/kas-wgpu",
    "crates/kas-widgets",
    "examples/mandlebrot",
]
